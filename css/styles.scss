---
---

@use "str-functions";

$padding: 16px;

$sprite-size: 32px;
$sprite-offset-muliplier: $sprite-size * -1;

@mixin light {
  $text-color: 0, 0, 0;
  $background-color: 255, 255, 255;
  $link-color: 7, 130, 30;
  $alink-color: 255, 0, 0;
  // $block-color: 0, 128, 255;
  $block-color: 253, 118, 0;
  $accent-color: #FFA63D; // TODO Adapt for light mode

  $__bg: rgb($background-color...);
  $__kg: rgb($block-color...);
  $__lg: rgb($link-color...);

  color-scheme: light;
  --text-color: #{$text-color};
  --background-color: #{$background-color};
  --link-color: #{$link-color};
  --alink-color: #{$alink-color};
  --block-color: #{$block-color};
  --accent-color: #{$accent-color};

  @for $i from 1 through 9 {
    --block-color-#{$i}0-solid: #{mix($__bg, $__kg, $weight: (10 - $i) * 10)};
    --link-color-#{$i}0-solid: #{mix($__bg, $__lg, $weight: (10 - $i) * 10)};
  }

  nav #links a {
    &.nav-overview::before { background-image: url({{ "/img/icon_overview_light.png" | relative_url }}); }
    &.nav-flowers::before { background-image: url({{ "/img/icon_flower_light.png" | relative_url }}); }
    &.nav-blocks::before { background-image: url({{ "/img/icon_block_light.png" | relative_url }}); }
    &.nav-items::before { background-image: url({{ "/img/icon_items_light.png" | relative_url }}); }
  }
}

@mixin dark {
  $text-color: 238, 238, 238;
  $background-color: 51, 51, 51;
  $link-color: 204, 204, 255;
  $alink-color: 255, 204, 204;
  $block-color: 255, 255, 255;
  $accent-color: #FFA63D; // TODO Adapt for light mode

  $__bg: rgb($background-color...);
  $__kg: rgb($block-color...);
  $__lg: rgb($link-color...);

  color-scheme: dark;
  --text-color: #{$text-color};
  --background-color: #{$background-color};
  --link-color: #{$link-color};
  --alink-color: #{$alink-color};
  --block-color: #{$block-color};
  --accent-color: #{$accent-color};

  @for $i from 1 through 9 {
    --block-color-#{$i}0-solid: #{mix($__bg, $__kg, $weight: (10 - $i) * 10)};
    --link-color-#{$i}0-solid: #{mix($__bg, $__lg, $weight: (10 - $i) * 10)};
  }

  nav #links a {
    &.nav-overview::before { background-image: url({{ "/img/icon_overview_dark.png" | relative_url }}); }
    &.nav-flowers::before { background-image: url({{ "/img/icon_flower_dark.png" | relative_url }}); }
    &.nav-blocks::before { background-image: url({{ "/img/icon_block_dark.png" | relative_url }}); }
    &.nav-items::before { background-image: url({{ "/img/icon_items_dark.png" | relative_url }}); }
  }
}

@mixin applytheme($theme) {
  @if ($theme == "dark") {
    @include dark();
  } @else {
    @include light();
  }
}

%pixelated {
  image-rendering: crisp-edges; // Firefox
  image-rendering: pixelated;   // The rest of 'em
}

%inventory {
  box-sizing: content-box;

  border: 2px solid;
  background-color: #8b8b8b;
  border-color: #373737 #fff #fff #373737;
}

@mixin tool-info-light {
  .block-info .tool-info {
    &.tool-level-0 {
      background-position-x: 1 * $sprite-offset-muliplier;
    }
    &.tool-none {
      background-position-x: 1 * $sprite-offset-muliplier;
    }
    &.tool-shears.tool-level-0 {
      background-position-x: 3 * $sprite-offset-muliplier;
    }
  }
}

@mixin tool-info-dark {
  .block-info .tool-info {
    &.tool-level-0 {
      background-position-x: 0 * $sprite-offset-muliplier;
    }
    &.tool-none {
      background-position-x: 0 * $sprite-offset-muliplier;
    }
    &.tool-shears.tool-level-0 {
      background-position-x: 2 * $sprite-offset-muliplier;
    }
  }
}

*, *::before, *::after {
  box-sizing: border-box;
}

html {
  height: 100%;
}

.container {
  max-width: 1024px;
  margin-left: auto;
  margin-right: auto;
}

body {
  font-size: 10pt;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;

  color: RGB(var(--text-color));
  background-color: RGB(var(--background-color));

  margin: 0;
  min-height: 100%;
  display: grid;

  grid-template-columns: minmax(0, 1fr);
  grid-template-rows: max-content max-content auto max-content;
  grid-template-areas: 'header' 'nav' 'main' 'footer';

  a {
    color: RGB(var(--link-color));

    &:active {
      color: RGB(var(--alink-color));
    }
  }

  @include applytheme("light");
  &.dark {
    @include applytheme("dark");
    @include tool-info-dark;
  }
  &.light {
    @include applytheme("light");
    @include tool-info-light;
  }

  header {
    grid-area: header;
    padding: $padding;

    font-size: 18pt;
    background-color: RGBA(var(--block-color), 0.3);

    >.container {
      display: flex;
      align-items: center;
    }

    img {
      width: 32px;
      height: auto;
      @extend %pixelated;
      margin-right: 8px;
    }
  }

  nav {
    grid-area: nav;
    background-color: RGBA(var(--block-color), 0.2);

    >.container {
      display: flex;
      justify-content: space-between;
    }

    #links {
      display: flex;
      overflow-x: auto;
      flex-shrink: 1;
      
      a {
        display: flex;
        align-items: center;
        padding: $padding;
        color: RGB(var(--text-color));
        font-weight: bold;
        text-decoration: none;
        white-space: nowrap;

        &.nav-active {
          background-color: RGBA(var(--block-color), 0.1);
        }
        
        &:hover {
          background-color: RGBA(var(--block-color), 0.2);
        }

        &::before {
          content: "";
          display: block;
          width: 16px;
          height: 16px;
          @extend %pixelated;
          background-size: 16px;
          margin-right: 4px;
        }
      }
    }

    #search {
      flex-shrink: 0;
      display: flex;
      position: relative;

      #search-input {
        width: 300px;
        max-width: 100%;
        appearance: none;
        padding: 8px 8px 8px 40px;
        border: 0;
        border-radius: 0;
        background-color: RGBA(var(--block-color), 0.2);
        background-image: url({{ "/img/search.png" | relative_url }});
        background-repeat: no-repeat;
        background-position: 8px center;
        background-size: 24px 24px;
        @extend %pixelated;
        color: RGB(var(--text-color));

        &::placeholder {
          color: RGBA(var(--text-color), 0.5);
        }
      }

      #results-container {
        display: none;
        list-style-type: none;
        position: absolute;
        top: 100%;
        width: 100%;
        background-color: var(--block-color-20-solid);
        margin: 0;
        padding: 8px;
        flex-direction: column;
        box-shadow: 0 6px 12px rgba(#000, $alpha: 0.2);

        a {
          display: block;
          text-decoration: none;
          padding: 4px;

          &:hover, &:focus {
            background-color: RGB(var(--block-color), 0.2);
          }
        }
      }

      &:focus-within {
        #results-container {
          display: flex;
          
          &:empty {
            display: none;
          }
        }
      }
    }
  }

  main {
    grid-area: main;
    padding: $padding;
  }
  
  footer {
    grid-area: footer;
    padding: $padding;
    background-color: RGBA(var(--block-color), 0.1);

    >.container {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }


    .theme-select {
      margin-left: 8px;
      display: flex;
      align-items: center;

      label {
        margin-right: 4px;
      }
    }
  }
}

input,
button,
select {
  font: inherit;
}

.err404-container {
  margin: 10px auto;
  max-width: 600px;
  text-align: center;

  h1 {
    margin: 30px 0;
    font-size: 4em;
    line-height: 1;
    letter-spacing: -1px;
  }
}

.page-todo, .page-todo a {
  color: RGB(var(--alink-color));
  font-weight: bold;
}

.blocklist {
  list-style-type: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;

  li a {
    display: flex;
    align-items: center;
    text-decoration: none;
    padding: $padding;
    background-color: RGBA(var(--block-color), 0.2);
    margin: 8px;

    img {
      margin-right: 8px;
      width: 32px;
      height: auto;

      @extend %pixelated;
    
      @extend %inventory;
    }
  }
}

.crafting-recipe {
  background: RGB(var(--block-color), 0.1);
  border-collapse: collapse;
  margin: 1em 0;

  >tbody>tr>td {
    padding: 12px;
  }

  .crafting-grid {
    table-layout: fixed;
    border-collapse: separate;
    border-spacing: 4px;
    td {
      padding: 2px;
      background: RGB(var(--block-color), 0.25);
    }
  }

  .crafting-ingredients {
    display: flex;
    flex-wrap: wrap;
    gap: 4px;

    .crafting-ingredient {
      padding: 2px;
      background: RGB(var(--block-color), 0.25);
    }

    >.crafting-ingredient:nth-child(3n) {
      flex-basis: 100%;
    }
  }

  .item {
    display: block;
    width: 32px;
    height: 32px;
    background-size: 32px;

    @extend %pixelated;

    &.item-type-multiple {
      position: relative;
      overflow: hidden;

      >.item {
        position: absolute;
        left: 0;
        top: 0;
      }
    }
  }

  
  .result {
    padding-left: 0;
    .result-inner {
      display: flex;
      align-items: center;
      &::before {
        content: "";
        display: block;
        width: 32px;
        height: 32px;
        background: RGB(var(--block-color), 0.25);
        margin-right: 12px;
      }
    }
  }

  &.crafting-shaped {
    .result .result-inner::before {
      -webkit-mask-image: url("{{ "/img/arrow.svg" | relative_url }}");
      mask-image: url("{{ "/img/arrow.svg" | relative_url }}");
    }
  }

  &.crafting-shapeless {
    .result .result-inner::before {
      -webkit-mask-image: url("{{ "/img/shapeless.svg" | relative_url }}");
      mask-image: url("{{ "/img/shapeless.svg" | relative_url }}");
    }
  }

  &.crafting-smelting .result .result-inner::before {
    -webkit-mask-image: url("{{ "/img/flame.svg" | relative_url }}");
    mask-image: url("{{ "/img/flame.svg" | relative_url }}");
  }

  .result-slot {
    padding: 2px;
    background: RGB(var(--block-color), 0.25);
  }
}

.block-info {
  // display: block;
  float: right;
  background: RGB(var(--block-color), 0.1);
  border-collapse: collapse;
  // padding: 8px;

  img.preview-icon {
    box-sizing: content-box;
    width: 256px;
    height: auto;
    // @extend %pixelated;
    
    // @extend %inventory;
    background-color: RGB(var(--block-color), 0.2);

    padding: 8px;

    &.item-icon {
      @extend %pixelated;
    }
  }

  img.inventory-icon {
    display: block;
    width: 32px;
    height: auto;
    margin: 0 auto;

    @extend %inventory;
    @extend %pixelated;
  }

  img.effect-icon {
    @extend %pixelated;
  }

  .tool-info {
    @extend %pixelated;

    display: block;
    width: 32px;
    height: 32px;
    margin: 0 auto;
    background-image: url("{{ "/img/tools_sprite.png" | relative_url }}");
    background-size: 224px 192px;

    @for $i from 0 through 5 {
      &.tool-level-#{$i} {
        background-position-x: ($i + 1) * $sprite-offset-muliplier;
      }
    }

    &.tool-axe {
      background-position-y: 0 * $sprite-offset-muliplier;
    }

    &.tool-pickaxe {
      background-position-y: 1 * $sprite-offset-muliplier;
    }

    &.tool-shovel {
      background-position-y: 2 * $sprite-offset-muliplier;
    }

    &.tool-hoe {
      background-position-y: 3 * $sprite-offset-muliplier;
    }

    &.tool-sword {
      background-position-y: 4 * $sprite-offset-muliplier;
    }

    &.tool-none {
      background-position-x: 1 * $sprite-offset-muliplier;
      background-position-y: 5 * $sprite-offset-muliplier;
    }

    &.tool-shears.tool-level-0 {
      background-position-x: 3 * $sprite-offset-muliplier;
    }

    &.tool-shears,
    &.tool-shears.tool-level-1,
    &.tool-shears.tool-level-2,
    &.tool-shears.tool-level-3,
    &.tool-shears.tool-level-4,
    &.tool-shears.tool-level-5 {
      background-position-x: 4 * $sprite-offset-muliplier;
      background-position-y: 5 * $sprite-offset-muliplier;
    }
  }
  
  tbody>tr:nth-child(odd) {
    background-color: RGBA(var(--block-color), 0.2);
  }

  td, th {
    padding: 4px;
  }
}

.unsupported-browser {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  z-index: 99;
  background-color: #fcc;
  color: #400;
  font: bold 14pt/1.5 sans-serif;

  &__inner {
    vertical-align: middle;
    text-align: center;

    &__message {
      margin: 8px auto;
    }
  }
}

.cookiemsg-root {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: var(--block-color-30-solid);
  padding: 16px;
  display: flex;
  justify-content: center;
  z-index: 102;
  animation: cookiemsg-attention 1s ease-out;

  .cookiemsg-inner {
    display: flex;
    flex-direction: column;

    .cookiemsg-buttons {
      margin-top: 8px;
      display: flex;
      gap: 8px;
    }
  }
}

button {
  appearance: none;
  font: inherit;
  padding: 4px 8px;
  background: var(--block-color-10-solid);
  color: RGB(var(--text-color));
  border: 2px solid currentColor;
  cursor: pointer;
  border-radius: 0;

  &:hover {
    background: var(--block-color-30-solid);
  }

  &.cookiemsg-accept {
    background: var(--link-color-60-solid);
    
    &:hover {
      background: var(--link-color-90-solid);
    }
  }
}

#missingno {
  background-color: #f0f;
  width: 128px;
  height: 128px;
  margin: 8px auto;

  position: relative;

  &::before, &::after {
    content: "";
    display: block;
    width: 50%;
    height: 50%;
    background-color: #000;
    position: absolute;
    left: 0;
    top: 0;
    animation-timing-function: ease;
    animation-duration: 4s;
    animation-iteration-count: infinite;
    animation-play-state: running;
  }

  &::before {
    animation-name: missingno-1;
  }

  &::after {
    animation-name: missingno-2;
  }
}

@keyframes missingno-1 {
  0%, 100% { transform: translate(0%, 0%); }
  25% { transform: translate(100%, 0%); }
  50% { transform: translate(100%, 100%); }
  75% { transform: translate(0%, 100%); }
}

@keyframes missingno-2 {
  0%, 100% { transform: translate(100%, 100%); }
  25% { transform: translate(0%, 100%); }
  50% { transform: translate(0%, 0%); }
  75% { transform: translate(100%, 0%); }
}

@keyframes cookiemsg-attention {
  10%, 50% {
    background-color: var(--block-color-50-solid);
  }
  0%, 30%, 100% {
    background-color: var(--block-color-30-solid);
  }
}

@media (prefers-color-scheme: dark) {
  body {
    @include applytheme("dark");

    @include tool-info-dark;
  }
}

@media (max-width: 720px) {
  body nav #search:not(:focus-within) #search-input {
    width: 40px;
    background-position: center center;
  }
}
